name: CMake Build

on:
  pull_request:
    branches: [ "main" ]
#  push:
#    branches: [ "main" ]

env:
  QT_VERSION: '6.4.*'
  BUILD_TYPE: 'MinSizeRel'

jobs:
  build:
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: '${{matrix.config.os}}'
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest,  arch: gcc_64            }
          - { os: windows-latest, arch: win64_msvc2019_64 }
          - { os: macos-latest,   arch: clang_64          }

    steps:
    - name: Get LogDoctor
      uses: actions/checkout@v3

    
    - name: Install Qt6
      uses: jurplel/install-qt-action@v3
      with:
        target: 'desktop'
        arch: '${{matrix.config.arch}}'
        version: '${{env.QT_VERSION}}'
        modules: 'qtcharts'
        archives: 'icu qtbase qttools qttranslations'
        tools: 'tools_ifw tools_cmake tools_qtcreator,qt.tools.qtcreator'
        install-deps: 'true'
        setup-python: 'false'
    
    
    - name: Get MSVC (WIN)
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1.12.1
    
    
    - name: Append PATHs (WIN)
      if: runner.os == 'Windows'
      uses: myci-actions/export-env-var-powershell@1
      with:
        name: PATH
        value: $env:PATH;D:/a/LogDoctor/Qt/Tools/QtCreator/bin/jom


    - name: Configure CMake (NIX)
      if: runner.os != 'Windows'
      run: cmake -S ${{github.workspace}}/logdoctor -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Configure CMake (WIN)
      if: runner.os == 'Windows'
      run: cmake -S ${{github.workspace}}\logdoctor -B ${{github.workspace}}\build "-DCMAKE_BUILD_TYPE:STRING=${{env.BUILD_TYPE}}" "-DCMAKE_GENERATOR:STRING=NMake Makefiles JOM" "-DCMAKE_MAKE_PROGRAM:STRING=jom" "-DCMAKE_CXX_COMPILER=cl.exe"


    - name: Build
      run: cmake --build ${{github.workspace}}/build --target all

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest

