name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  QT_VERSION: '5.15.2'
  BUILD_TYPE: 'MinSizeRel'

jobs:
  build:
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: '${{matrix.os}}'
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
    - name: Get LogDoctor
      uses: actions/checkout@v3
    
    
    #- name: Get CMake
    #  uses: lukka/get-cmake@latest

    
    - name: Install Qt5
      uses: jurplel/install-qt-action@v3
      with:
        target: 'desktop'
        version: '${{env.QT_VERSION}}'
        modules: 'qtcharts'
        archives: 'icu qtbase qttools qttranslations'
        tools: 'tools_ifw tools_cmake tools_qtcreator,qt.tools.qtcreator'
        install-deps: 'true'
        setup-python: 'false'
        
      
    - name: Check paths (WIN)
      run: |
        ls D:/a/LogDoctor/Qt/5.15.2


    - name: Configure CMake (NIX)
      if: runner.os != 'Windows'
      env:
        CMAKE_PREFIX_PATH: 'D:/a/LogDoctor/Qt/5.15.2/win64_msvc2019_64'
      run: cmake -S ${{github.workspace}}/logdoctor -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Configure CMake (WIN)
      if: runner.os == 'Windows'
      run: |
        echo "D:/a/LogDoctor/Qt/Tools/CMake_64/bin" >> $GITHUB_PATH
        echo "D:/a/LogDoctor/Qt/Tools/QtCreator/bin" >> $GITHUB_PATH
        cmake -S ${{github.workspace}}\logdoctor -B ${{github.workspace}}\build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}


    - name: Build (NIX)
      if: runner.os != 'Windows'
      run: cmake --build ${{github.workspace}}/build --target all

    - name: Build (WIN)
      if: runner.os == 'Windows'
      run: cmake --build ${{github.workspace}}/build --target ALL_BUILD 

    #- name: Test
    #  working-directory: ${{github.workspace}}/build
    #  run: ctest -C ${{env.BUILD_TYPE}}

